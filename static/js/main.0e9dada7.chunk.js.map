{"version":3,"sources":["sagas/rootSaga.js","store.js","Components/ToneGenerators.js","Components/Button.js","Components/Layout.js","Components/VerticalRange.js","App.js","serviceWorker.js","index.js"],"names":["setMasterVolume","setOscillatorParameter","initializeAudioSaga","watchForUserPermissionForAudio","rootSaga","masterVolume","audioContext","payload","console","log","gain","linearRampToValueAtTime","currentTime","oscillators","oscillatorIndex","parameter","value","AudioContext","window","webkitAudioContext","oscillator1","createOscillator","panner1","createStereoPanner","pan","setValueAtTime","oscillator2","panner2","createGain","type","frequency","detune","connect","destination","start","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","middleware","model","appIsInitialized","initializeApp","action","state","transport","isPlaying","isPaused","isStopped","play","pause","stop","mixer","tracks","createTrack","volume","panning","setTrackVolume","trackIndex","setTrackPanning","hasUserPermissionForAudio","grantUserPermissionForAudio","theme","toggleTheme","errors","createError","store","createStore","run","ToneGenerators","Button","styled","button","Layout","useStoreState","useStoreActions","actions","style","display","flexDirection","margin","padding","marginRight","textAlign","name","step","min","max","values","onChange","onClick","VerticalRange","alignItems","direction","Direction","Up","renderTrack","props","children","onMouseDown","onTouchStart","flexGrow","width","justifyContent","height","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","boxShadow","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0e9dada7.chunk.js","sourcesContent":["import { put, takeEvery, all } from 'redux-saga/effects'\n\nfunction* setMasterVolume(masterVolume, audioContext, { payload }) {\n  console.log('masterVolume is', masterVolume);\n  console.log('audioContext is', audioContext);\n  console.log('payload is', payload);\n  masterVolume.gain.linearRampToValueAtTime(payload, audioContext.currentTime + 0.2);\n}\n\nfunction* setOscillatorParameter(oscillators, { payload }) {\n  console.log('setOscillatorParameter');\n  console.log('oscillators is', oscillators);\n  console.log('payload is', payload);\n  const { oscillatorIndex, parameter, value } = payload;\n  oscillators[oscillatorIndex][parameter].value = value;\n}\n\nfunction* initializeAudioSaga() {\n  console.log('initSaga()');\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioContext = new AudioContext();\n  const oscillator1 = audioContext.createOscillator();\n  const panner1 = audioContext.createStereoPanner();\n  panner1.pan.setValueAtTime(-1, audioContext.currentTime);\n  const oscillator2 = audioContext.createOscillator();\n  const panner2 = audioContext.createStereoPanner();\n  panner2.pan.setValueAtTime(1, audioContext.currentTime);\n  const masterVolume = audioContext.createGain();\n  masterVolume.gain.value = 0;\n  oscillator1.type = 'sine';\n  oscillator2.type = 'sine';\n  oscillator1.frequency.value = 72; // value in hertz\n  oscillator2.frequency.value = 71.6; // value in hertz\n  oscillator1.detune.setValueAtTime(-19, audioContext.currentTime); // value in cents\n  oscillator1.connect(panner1);\n  oscillator2.connect(panner2);\n  panner1.connect(masterVolume);\n  panner2.connect(masterVolume);\n  masterVolume.connect(audioContext.destination);\n  oscillator1.start();\n  oscillator2.start();\n  masterVolume.gain.linearRampToValueAtTime(0.5, audioContext.currentTime + 5);\n  const oscillators = [oscillator1, oscillator2];\n  yield put({type: '@action.initializeApp'});\n  yield takeEvery('@action.mixer.setMasterVolume', setMasterVolume, masterVolume, audioContext);\n  yield takeEvery('@action.setOscillatorParameter', setOscillatorParameter, oscillators);\n}\n\nfunction* watchForUserPermissionForAudio() {\n  yield takeEvery('@action.grantUserPermissionForAudio', initializeAudioSaga);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    watchForUserPermissionForAudio(),\n  ])\n}","import { action, createStore } from 'easy-peasy';\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from 'sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nconst model = {\n  appIsInitialized: false,\n  initializeApp: action(state => {\n    state.appIsInitialized = true;\n  }),\n\n  transport: {\n    isPlaying: false,\n    isPaused: true,\n    isStopped: true,\n\n    play: action(state => {\n      state.isPlaying = true;\n      state.isPaused = false;\n      state.isStopped = false;\n    }),\n    pause: action(state => {\n      state.isPlaying = false;\n      state.isPaused = true;\n      state.isStopped = false;\n    }),\n    stop: action(state => {\n      state.isPlaying = false;\n      state.isPaused = true;\n      state.isStopped = true;\n    }),\n  },\n\n  mixer: {\n    // tracks is an array of objects\n    // each track in the mixer gets a volume and panning\n    tracks: [],\n    createTrack: action(state => {\n      state.tracks = [...state.tracks, { volume: 0.5, panning: 0 }]\n    }),\n    setTrackVolume: action((state, payload) => {\n      const { trackIndex, volume } = payload;\n      state.tracks[trackIndex].volume = volume;\n    }),\n    setTrackPanning: action((state, payload) => {\n      const { trackIndex, panning } = payload;\n      state.tracks[trackIndex].panning = panning;\n    }),\n\n    // Master volume\n    masterVolume: 0.5, // between 0 and 1\n    setMasterVolume: action((state, payload) => {\n      state.masterVolume = payload;\n    })\n  },\n\n  oscillators: [\n    {\n      frequency: 72,\n      detune: -19,\n    },\n    {\n      frequency: 71.6,\n      detune: 0,\n    }\n  ],\n  setOscillatorParameter: action((state, payload) => {\n    const { oscillatorIndex, parameter, value } = payload;\n    state.oscillators[oscillatorIndex][parameter] = value;\n  }),\n\n  // In order to do anything with an AudioContext,\n  // we first need user permission. [Web Audio API]\n  hasUserPermissionForAudio: false,\n  grantUserPermissionForAudio: action(state => {\n    state.hasUserPermissionForAudio = true;\n  }),\n\n\n  theme: 'light',\n  toggleTheme: action((state) => {\n    state.theme = (state.theme === 'light' ? 'dark' : 'light');\n  }),\n\n  errors: [\"Must get permission to use AudioContext.\"],\n\n  createError: action((state, payload) => {\n    state.errors = [...state.errors, payload];\n  }),\n};\n\n// Create the store\nconst store = createStore(model, { middleware });\n// Start the saga middleware\nsagaMiddleware.run(rootSaga);\n// Export the store.\nexport default store;","import React from 'react';\n\nfunction ToneGenerators() {\n  return (\n    <div>\n      <p>Generate some soothing tones.</p>\n    </div>\n  );\n}\n\nexport default ToneGenerators;\n","import styled from '@emotion/styled';\n\nconst Button = styled.button`\n  font-size: 2rem;\n  font-family: \"Roboto Mono\";\n  font-weight: 400;\n  font-style: normal;\n`;\n\nexport default Button;","import React from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { Button, VerticalRange } from 'Components';\n\n\n\nfunction Layout() {\n  const transport = {\n    ...useStoreState(state => state.transport),\n    ...useStoreActions(actions => actions.transport),\n  };\n  const mixer = {\n    ...useStoreState(state => state.mixer),\n    ...useStoreActions(actions => actions.mixer),\n  };\n  const oscillators = useStoreState(state => state.oscillators);\n  const setOscillatorParameter = useStoreActions(actions => actions.setOscillatorParameter)\n\n  // example of using state and actions from easy-peasy\n  const theme = useStoreState(state => state.theme);\n  const toggleTheme = useStoreActions(actions => actions.toggleTheme);\n\n  const hasUserPermissionForAudio = useStoreState(state => state.hasUserPermissionForAudio);\n  const grantUserPermissionForAudio = useStoreActions(\n    actions => actions.grantUserPermissionForAudio\n  );\n\n  if (!hasUserPermissionForAudio) {\n    return (\n      <Button\n        onClick={() => grantUserPermissionForAudio()}\n      >\n        Grant permission for audio\n      </Button>\n    );\n  }\n\n  return (\n    <div>\n      {/* <Button\n        theme={theme}\n        onClick={() => {\n          toggleTheme();\n        }}\n      >\n        This is the {theme} theme\n      </Button>\n\n      <Button onClick={() => mixer.createTrack()}>\n        Create Track\n      </Button>\n      <Button\n        disabled={transport.isPlaying}\n        onClick={() => transport.play()}\n      >\n        play\n      </Button>\n      <Button\n        disabled={transport.isPaused}\n        onClick={() => transport.pause()}\n      >\n        pause\n      </Button>\n      <Button\n        disabled={transport.isStopped}\n        onClick={() => transport.stop()}\n      >\n        stop\n      </Button> */}\n      <div style={{ display: 'flex', flexDirection: 'row', margin: '20px', padding: '20px'}}>\n        {/* oscillator frequencies */}\n        <div style={{ marginRight: '100px' }}>\n          <label style={{ display: 'block', textAlign: 'center' }}>left oscillator</label>\n          <div style={{ display: 'flex', flexDirection: 'row'}}>\n            <VerticalRange\n              name=\"frequency\"\n              step={0.001}\n              min={40}\n              max={200}\n              values={[oscillators[0].frequency]}\n              onChange={([value]) => setOscillatorParameter({\n                oscillatorIndex: 0,\n                parameter: 'frequency',\n                value\n              })}\n            />\n            <VerticalRange\n              name=\"detune\"\n              step={0.001}\n              min={-50}\n              max={50}\n              values={[oscillators[0].detune]}\n              onChange={([value]) => setOscillatorParameter({\n                oscillatorIndex: 0,\n                parameter: 'detune',\n                value\n              })}\n            />\n          </div>\n        </div>\n\n        <div style={{ marginRight: '100px'}}>\n          <label style={{ display: 'block', textAlign: 'center' }}>right oscillator</label>\n          <div style={{ display: 'flex', flexDirection: 'row'}}>\n            <VerticalRange\n              name=\"frequency\"\n              step={0.001}\n              min={40}\n              max={200}\n              values={[oscillators[1].frequency]}\n              onChange={([value]) => setOscillatorParameter({\n                oscillatorIndex: 1,\n                parameter: 'frequency',\n                value\n              })}\n            />\n            <VerticalRange\n              name=\"detune\"\n              step={0.001}\n              min={-50}\n              max={50}\n              values={[oscillators[1].detune]}\n              onChange={([value]) => setOscillatorParameter({\n                oscillatorIndex: 1,\n                parameter: 'detune',\n                value\n              })}\n            />\n          </div>\n        </div>\n        <VerticalRange\n          name=\"master volume\"\n          step={0.0001}\n          min={0}\n          max={1}\n          values={[mixer.masterVolume]}\n          onChange={([value]) => mixer.setMasterVolume(value)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Direction, Range, getTrackBackground } from 'react-range';\n\nfunction VerticalRange({ name, step, min, max, values, onChange }) {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '20px'}}>\n      <Range\n        step={step}\n        min={min}\n        max={max}\n        direction={Direction.Up}\n        values={values}\n        onChange={onChange}\n        renderTrack={({ props, children }) => (\n          <div\n            onMouseDown={props.onMouseDown}\n            onTouchStart={props.onTouchStart}\n            style={{\n              ...props.style,\n              flexGrow: 1,\n              width: '36px',\n              display: 'flex',\n              justifyContent: 'center',\n              height: '300px'\n            }}\n          >\n            <div\n              ref={props.ref}\n              style={{\n                width: '5px',\n                height: '100%',\n                borderRadius: '4px',\n                background: getTrackBackground({\n                  colors: ['#548BF4', '#ccc'],\n                  values,\n                  min,\n                  max,\n                  direction: Direction.Up\n                }),\n                alignSelf: 'center'\n              }}\n            >\n              {children}\n            </div>\n          </div>\n        )}\n        renderThumb={({ props, isDragged }) => (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              height: '42px',\n              width: '42px',\n              borderRadius: '4px',\n              backgroundColor: '#FFF',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              boxShadow: '0px 2px 6px #AAA'\n            }}\n          >\n            <div\n              style={{\n                width: '16px',\n                height: '5px',\n                backgroundColor: isDragged ? '#548BF4' : '#CCC'\n              }}\n            />\n          </div>\n        )}\n      />\n      <label>{name}</label>\n    </div>\n  );\n}\n\nexport default VerticalRange;","import React from 'react';\nimport { StoreProvider } from 'easy-peasy';\nimport store from './store';\nimport { Layout } from 'Components';\n\nfunction App() {\n  return (\n    <StoreProvider store={store}>\n      <Layout />\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}