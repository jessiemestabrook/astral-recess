{"version":3,"sources":["sagas/rootSaga.js","store.js","Components/Button.js","Components/Styled.js","Components/Layout.js","Components/VerticalRange.js","Components/OscillatorParameterRange.js","App.js","serviceWorker.js","index.js"],"names":["setMasterVolume","setOscillatorParameter","initializeAudioSaga","watchForUserPermissionForAudio","rootSaga","doSetMasterVolume","masterVolume","audioContext","value","console","log","currentTime","gain","linearRampToValueAtTime","payload","call","oscillators","oscillatorIndex","parameter","AudioContext","window","webkitAudioContext","oscillator1","createOscillator","type","frequency","panner1","createStereoPanner","pan","setValueAtTime","connect","start","oscillator2","panner2","pinkNoise","b0","b1","b2","b3","b4","b5","b6","node","createScriptProcessor","onaudioprocess","e","output","outputBuffer","getChannelData","i","white","Math","random","pinkNoiseFilter","createBiquadFilter","pinkNoiseVolume","createGain","Q","detune","visualizer","createAnalyser","fftSize","destination","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","middleware","model","appIsInitialized","initializeApp","action","state","transport","isPlaying","isPaused","isStopped","play","pause","stop","mixer","tracks","createTrack","volume","panning","setTrackVolume","trackIndex","setTrackPanning","createVisualizer","hasUserPermissionForAudio","grantUserPermissionForAudio","theme","toggleTheme","errors","createError","store","createStore","run","Button","styled","button","ControlsWrapper","div","ControlGroup","ControlLabel","label","Controls","Layout","useStoreState","canvasRef","useRef","useEffect","current","canvas","context","getContext","ratio","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","getPixelRatio","width","getComputedStyle","getPropertyValue","slice","height","style","requestId","render","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","y","moveTo","lineTo","stroke","requestAnimationFrame","cancelAnimationFrame","useStoreActions","actions","step","min","max","name","values","onChange","ref","id","onClick","VerticalRange","display","flexDirection","alignItems","margin","direction","Direction","Up","renderTrack","props","children","onMouseDown","onTouchStart","flexGrow","justifyContent","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","boxShadow","OscillatorParameterRange","oscillatorProps","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.088a8c45.chunk.js","sourcesContent":["import { call, delay, put, takeEvery, all } from 'redux-saga/effects'\n\nfunction doSetMasterVolume(masterVolume, audioContext, value) {\n  console.log('doSetMasterVolume');\n  console.log('audioContext.currentTime is', audioContext.currentTime);\n  masterVolume.gain.linearRampToValueAtTime(value, audioContext.currentTime + 0.1);\n}\n\nfunction* setMasterVolume(masterVolume, audioContext, { payload }) {\n  yield call(doSetMasterVolume, masterVolume, audioContext, payload);\n}\n\nfunction* setOscillatorParameter(oscillators, { payload }) {\n  const { oscillatorIndex, parameter, value } = payload;\n  oscillators[oscillatorIndex][parameter].value = value;\n}\n\n\n/*\n * INITIALIZE ALL THE WEB AUDIO TINGS\n */\nfunction* initializeAudioSaga() {\n\n  // create audio context\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioContext = new AudioContext();\n\n\n  /*\n   * Oscillator 1 + panner\n   */\n  const oscillator1 = audioContext.createOscillator();\n  oscillator1.type = 'sine';\n  oscillator1.frequency.value = 72; // value in hertz\n  const panner1 = audioContext.createStereoPanner();\n  panner1.pan.setValueAtTime(-1, audioContext.currentTime);\n  oscillator1.connect(panner1);\n  oscillator1.start();\n\n\n  /*\n   * Oscillator 2 + panner\n   */\n  const oscillator2 = audioContext.createOscillator();\n  oscillator2.type = 'sine';\n  oscillator2.frequency.value = 71.6; // value in hertz\n  const panner2 = audioContext.createStereoPanner();\n  panner2.pan.setValueAtTime(1, audioContext.currentTime);\n  oscillator2.connect(panner2);\n  oscillator2.start();\n\n\n  /*\n   * Pink Noise + filter, gain\n   */\n  const bufferSize = 4096;\n  const pinkNoise = (function() {\n      var b0, b1, b2, b3, b4, b5, b6;\n      b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n      const node = audioContext.createScriptProcessor(bufferSize, 1, 1);\n      node.onaudioprocess = function(e) {\n          const output = e.outputBuffer.getChannelData(0);\n          for (let i = 0; i < bufferSize; i++) {\n              const white = Math.random() * 2 - 1;\n              b0 = 0.99886 * b0 + white * 0.0555179;\n              b1 = 0.99332 * b1 + white * 0.0750759;\n              b2 = 0.96900 * b2 + white * 0.1538520;\n              b3 = 0.86650 * b3 + white * 0.3104856;\n              b4 = 0.55000 * b4 + white * 0.5329522;\n              b5 = -0.7616 * b5 - white * 0.0168980;\n              output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n              output[i] *= 0.11; // (roughly) compensate for gain\n              b6 = white * 0.115926;\n          }\n      }\n      return node;\n  })();\n  const pinkNoiseFilter = audioContext.createBiquadFilter();\n  const pinkNoiseVolume =  audioContext.createGain();\n  pinkNoise.connect(pinkNoiseFilter);\n  pinkNoiseFilter.connect(pinkNoiseVolume);\n  pinkNoiseFilter.type = 'lowpass';\n  pinkNoiseFilter.frequency.value = 5000;\n  pinkNoiseFilter.Q.value = 0;\n  pinkNoiseVolume.gain.value = 0.01;\n\n\n  /*\n   * Master Volume Gain Node, connections\n   */\n  const masterVolume = audioContext.createGain();\n  masterVolume.gain.value = 0;\n  oscillator1.detune.setValueAtTime(-19, audioContext.currentTime); // value in cents\n  panner1.connect(masterVolume);\n  panner2.connect(masterVolume);\n  pinkNoiseVolume.connect(masterVolume);\n\n  // masterVolume.gain.linearRampToValueAtTime(0.5, audioContext.currentTime + 2);\n\n\n  /*\n   * Visualizer, animation\n   */\n  const visualizer = audioContext.createAnalyser();\n  visualizer.fftSize = 2048;\n  masterVolume.connect(visualizer);\n  visualizer.connect(audioContext.destination);\n\n  /*\n   * Listen for incoming actions that affect audio nodes\n   */\n  const oscillators = [oscillator1, oscillator2, pinkNoiseVolume, pinkNoiseFilter];\n  yield put({type: '@action.initializeApp'});\n  yield put({type: '@action.createVisualizer', payload: visualizer});\n  yield takeEvery('@action.mixer.setMasterVolume', setMasterVolume, masterVolume, audioContext);\n  yield takeEvery('@action.setOscillatorParameter', setOscillatorParameter, oscillators);\n}\n\nfunction* watchForUserPermissionForAudio() {\n  yield takeEvery('@action.grantUserPermissionForAudio', initializeAudioSaga);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    watchForUserPermissionForAudio(),\n  ])\n}","import { action, createStore } from 'easy-peasy';\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from 'sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nconst model = {\n  appIsInitialized: false,\n  initializeApp: action(state => {\n    state.appIsInitialized = true;\n  }),\n\n  transport: {\n    isPlaying: false,\n    isPaused: true,\n    isStopped: true,\n\n    play: action(state => {\n      state.isPlaying = true;\n      state.isPaused = false;\n      state.isStopped = false;\n    }),\n    pause: action(state => {\n      state.isPlaying = false;\n      state.isPaused = true;\n      state.isStopped = false;\n    }),\n    stop: action(state => {\n      state.isPlaying = false;\n      state.isPaused = true;\n      state.isStopped = true;\n    }),\n  },\n\n  mixer: {\n    // tracks is an array of objects\n    // each track in the mixer gets a volume and panning\n    tracks: [],\n    createTrack: action(state => {\n      state.tracks = [...state.tracks, { volume: 0.5, panning: 0 }]\n    }),\n    setTrackVolume: action((state, payload) => {\n      const { trackIndex, volume } = payload;\n      state.tracks[trackIndex].volume = volume;\n    }),\n    setTrackPanning: action((state, payload) => {\n      const { trackIndex, panning } = payload;\n      state.tracks[trackIndex].panning = panning;\n    }),\n\n    // Master volume\n    masterVolume: 0, // between 0 and 1\n    setMasterVolume: action((state, payload) => {\n      state.masterVolume = payload;\n    })\n  },\n\n  oscillators: [\n    {\n      frequency: 72,\n      detune: -19,\n    },\n    {\n      frequency: 71.6,\n      detune: 0,\n    },\n    {\n      gain: 0.01,\n    },\n    {\n      frequency: 5000,\n      Q: 0,\n    }\n  ],\n  setOscillatorParameter: action((state, payload) => {\n    const { oscillatorIndex, parameter, value } = payload;\n    state.oscillators[oscillatorIndex][parameter] = value;\n  }),\n\n  visualizer: null, // this is probably a bad idea.  Going to see if it works.\n  createVisualizer: action((state, payload) => {\n    state.visualizer = payload;\n  }),\n\n  // In order to do anything with an AudioContext,\n  // we first need user permission. [Web Audio API]\n  hasUserPermissionForAudio: false,\n  grantUserPermissionForAudio: action(state => {\n    state.hasUserPermissionForAudio = true;\n  }),\n\n\n  theme: 'light',\n  toggleTheme: action((state) => {\n    state.theme = (state.theme === 'light' ? 'dark' : 'light');\n  }),\n\n  errors: [\"Must get permission to use AudioContext.\"],\n\n  createError: action((state, payload) => {\n    state.errors = [...state.errors, payload];\n  }),\n};\n\n// Create the store\nconst store = createStore(model, { middleware });\n// Start the saga middleware\nsagaMiddleware.run(rootSaga);\n// Export the store.\nexport default store;","import styled from '@emotion/styled';\n\nconst Button = styled.button`\n  font-size: 2rem;\n  font-family: \"Roboto Mono\";\n  font-weight: 400;\n  font-style: normal;\n`;\n\nexport default Button;","import styled from '@emotion/styled';\n\nexport const ControlsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 20px;\n  padding: 20px;\n`;\n\nexport const ControlGroup = styled.div`\n  margin-right: 100px;\n`;\n\nexport const ControlLabel = styled.label`\n  display: block;\n  text-align: center;\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  flex-direction: row;\n`;","import React, { useEffect, useRef } from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { Button, OscillatorParameterRange, VerticalRange } from 'Components';\nimport { ControlGroup, ControlLabel, Controls, ControlsWrapper } from './Styled';\n\n\n/*\n * This stuff is all for canvas pixel ratio.\n */\nconst getPixelRatio = context => {\n  var backingStore =\n    context.backingStorePixelRatio ||\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1;\n\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nfunction Layout() {\n\n  const visualizer = useStoreState(state => state.visualizer);\n  console.log('visualizer is', visualizer);\n\n  /*\n   * Canvas experiment\n   */\n  let canvasRef = useRef();\n  useEffect(() => {\n    if (!canvasRef || !canvasRef.current) return ;\n    let canvas = canvasRef.current;\n    let context = canvas.getContext('2d');\n\n    let ratio = getPixelRatio(context);\n    let width = getComputedStyle(canvas)\n      .getPropertyValue('width')\n      .slice(0, -2);\n    let height = getComputedStyle(canvas)\n      .getPropertyValue('height')\n      .slice(0, -2);\n\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    let requestId,\n        i = 0;\n\n    /*\n     * Main canvas rendering function\n     */\n    const render = () => {\n\n      var bufferLength = visualizer.frequencyBinCount;\n      var dataArray = new Uint8Array(bufferLength);\n      visualizer.getByteTimeDomainData(dataArray);\n\n      visualizer.getByteTimeDomainData(dataArray);\n\n      context.fillStyle = \"rgb(200, 200, 200)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n\n      context.lineWidth = 2;\n      context.strokeStyle = \"rgb(0, 0, 0)\";\n\n      context.beginPath();\n\n      var sliceWidth = canvas.width * 1.0 / bufferLength;\n      var x = 0;\n\n      for (var i = 0; i < bufferLength; i++) {\n\n        var v = dataArray[i] / 128.0;\n        var y = v * canvas.height / 2;\n\n        if (i === 0) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      context.lineTo(canvas.width, canvas.height / 2);\n      context.stroke();\n\n      // ANIMATION TEST\n      // context.clearRect(0, 0, canvas.width, canvas.height);\n      // context.beginPath();\n      // context.arc(\n      //   canvas.width / 2,\n      //   canvas.height / 2,\n      //   (canvas.width / 2) * Math.abs(Math.cos(i)),\n      //   0,\n      //   2 * Math.PI\n      // );\n      // context.fill();\n      // i += 0.05;\n\n      requestId = requestAnimationFrame(render);\n    }\n\n\n    /*\n     * Kick off canvas render with requestAnimationFrame()\n     */\n    render();\n\n    /*\n     * Return clean-up stuff for useEffect()\n     */\n    return () => {\n      cancelAnimationFrame(requestId);\n    }\n  });\n\n\n\n  const transport = {\n    ...useStoreState(state => state.transport),\n    ...useStoreActions(actions => actions.transport),\n  };\n  const mixer = {\n    ...useStoreState(state => state.mixer),\n    ...useStoreActions(actions => actions.mixer),\n  };\n\n  // example of using state and actions from easy-peasy\n  const theme = useStoreState(state => state.theme);\n  const toggleTheme = useStoreActions(actions => actions.toggleTheme);\n\n  const hasUserPermissionForAudio = useStoreState(state => state.hasUserPermissionForAudio);\n  const grantUserPermissionForAudio = useStoreActions(\n    actions => actions.grantUserPermissionForAudio\n  );\n\n  if (!hasUserPermissionForAudio) {\n    return (\n      <Button\n        onClick={() => grantUserPermissionForAudio()}\n      >\n        Grant permission for audio\n      </Button>\n    );\n  }\n\n  return (\n    <div>\n      <ControlsWrapper>\n\n        <ControlGroup>\n          <ControlLabel>left oscillator</ControlLabel>\n          <Controls>\n            <OscillatorParameterRange\n              oscillatorIndex={0}\n              parameter=\"frequency\"\n              step={0.001}\n              min={20}\n              max={300}\n            />\n            <OscillatorParameterRange\n              oscillatorIndex={0}\n              parameter=\"detune\"\n              step={0.001}\n              min={-50}\n              max={50}\n            />\n          </Controls>\n        </ControlGroup>\n\n        <ControlGroup>\n          <ControlLabel>right oscillator</ControlLabel>\n          <Controls>\n            <OscillatorParameterRange\n              oscillatorIndex={1}\n              parameter=\"frequency\"\n              step={0.001}\n              min={20}\n              max={300}\n            />\n            <OscillatorParameterRange\n              oscillatorIndex={1}\n              parameter=\"detune\"\n              step={0.001}\n              min={-50}\n              max={50}\n            />\n          </Controls>\n        </ControlGroup>\n\n        <ControlGroup>\n          <ControlLabel>pink noise</ControlLabel>\n          <Controls>\n            <OscillatorParameterRange\n              oscillatorIndex={3}\n              parameter=\"frequency\"\n              step={0.001}\n              min={1}\n              max={10000}\n            />\n            <OscillatorParameterRange\n              oscillatorIndex={3}\n              parameter=\"Q\"\n              step={0.001}\n              min={0}\n              max={15}\n            />\n            <OscillatorParameterRange\n              oscillatorIndex={2}\n              parameter=\"gain\"\n              step={0.001}\n              min={0}\n              max={0.25}\n            />\n          </Controls>\n        </ControlGroup>\n\n        <VerticalRange\n          name=\"master volume\"\n          step={0.0001}\n          min={0}\n          max={1}\n          values={[mixer.masterVolume]}\n          onChange={([value]) => mixer.setMasterVolume(value)}\n        />\n      </ControlsWrapper>\n\n      <canvas\n        ref={canvasRef}\n        id=\"visualizer\"\n        style={{ width: '500px', height: '500px' }}\n      />\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Direction, Range, getTrackBackground } from 'react-range';\n\nfunction VerticalRange({ parameter, step, min, max, values, onChange }) {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '20px'}}>\n      <Range\n        step={step}\n        min={min}\n        max={max}\n        direction={Direction.Up}\n        values={values}\n        onChange={onChange}\n        renderTrack={({ props, children }) => (\n          <div\n            onMouseDown={props.onMouseDown}\n            onTouchStart={props.onTouchStart}\n            style={{\n              ...props.style,\n              flexGrow: 1,\n              width: '36px',\n              display: 'flex',\n              justifyContent: 'center',\n              height: '300px'\n            }}\n          >\n            <div\n              ref={props.ref}\n              style={{\n                width: '5px',\n                height: '100%',\n                borderRadius: '4px',\n                background: getTrackBackground({\n                  colors: ['#548BF4', '#ccc'],\n                  values,\n                  min,\n                  max,\n                  direction: Direction.Up\n                }),\n                alignSelf: 'center'\n              }}\n            >\n              {children}\n            </div>\n          </div>\n        )}\n        renderThumb={({ props, isDragged }) => (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              height: '42px',\n              width: '42px',\n              borderRadius: '4px',\n              backgroundColor: '#FFF',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              boxShadow: '0px 2px 6px #AAA'\n            }}\n          >\n            <div\n              style={{\n                width: '16px',\n                height: '5px',\n                backgroundColor: isDragged ? '#548BF4' : '#CCC'\n              }}\n            />\n          </div>\n        )}\n      />\n      <label>{parameter}<br />{values[0]}</label>\n    </div>\n  );\n}\n\nexport default VerticalRange;","import React from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { VerticalRange } from 'Components';\n\nfunction OscillatorParameterRange({\n  oscillatorIndex,\n  parameter,\n  step,\n  min,\n  max\n}) {\n  const oscillatorProps = { parameter, step, min, max };\n  const oscillators = useStoreState(state => state.oscillators);\n  const setOscillatorParameter = useStoreActions(actions => actions.setOscillatorParameter)\n  return (\n    <VerticalRange\n      {...oscillatorProps}\n      values={[oscillators[oscillatorIndex][parameter]]}\n      onChange={([value]) => setOscillatorParameter({\n        oscillatorIndex,\n        parameter,\n        value\n      })}\n    />\n  );\n}\n\nexport default OscillatorParameterRange;\n","import React from 'react';\nimport { StoreProvider } from 'easy-peasy';\nimport store from './store';\nimport { Layout } from 'Components';\n\nfunction App() {\n  return (\n    <StoreProvider store={store}>\n      <Layout />\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}