{"version":3,"sources":["audio/helpers.js","sagas/rootSaga.js","store.js","Components/Button.js","Components/Styled.js","Components/Layout.js","Components/VerticalRange.js","Components/AudioNodeParameterRange.js","App.js","serviceWorker.js","index.js"],"names":["createAudioContext","AudioContext","window","webkitAudioContext","Error","audioContext","masterGain","createGain","masterAnalyser","createAnalyser","gain","value","connect","destination","setMasterVolume","payload","linearRampToValueAtTime","currentTime","setAudioNodeParameter","audioNodes","audioNodeIndex","parameter","setAllAudioParameters","mixer","newAudioNodes","masterVolume","forEach","audioNode","i","frequency","detune","Q","createOscillator","destinationNode","type","pan","oscillator","gainNode","analyser","stereoPanner","createStereoPanner","start","createPinkNoiseNode","b0","b1","b2","b3","b4","b5","b6","node","createScriptProcessor","onaudioprocess","e","output","outputBuffer","getChannelData","white","Math","random","createPinkNoiseOscillator","filterType","filterFrequency","filterQ","pinkNoise","biquadFilter","createBiquadFilter","initializeAudioSaga","watchForUserPermissionForAudio","rootSaga","osc1","osc1Gain","osc1Analyser","osc2","osc2Gain","osc2Analyser","pinkNoiseGain","pinkNoiseFilter","takeEvery","put","all","sagaMiddleware","createSagaMiddleware","middleware","model","theme","toggleTheme","action","state","hasUserPermissionForAudio","grantUserPermissionForAudio","errors","createError","activePreset","changeActivePreset","presets","visualizer","createVisualizer","oscillator1Visualizer","createOsc1Visualizer","oscillator2Visualizer","createOsc2Visualizer","store","createStore","run","Button","styled","button","ControlsWrapper","div","ControlGroup","ControlLabel","label","Controls","Layout","canvasRef","useRef","osc1Ref","osc2Ref","useStoreState","useStoreActions","actions","onClick","step","min","max","name","values","onChange","ref","style","width","height","id","VerticalRange","display","flexDirection","alignItems","margin","direction","Direction","Up","renderTrack","props","children","onMouseDown","onTouchStart","flexGrow","justifyContent","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","boxShadow","AudioNodeParameterRange","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fc40622f.chunk.js","sourcesContent":["/**\n * @file Provides functions that interface directly with the web audio API\n * @author Patrick Estabrook\n */\n\n\n/**\n * @function\n * @name createAudioContext\n * @returns {void} Nothing\n */\nexport const createAudioContext = () => {\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  if (!AudioContext) {\n    throw new Error('It appears that this browser does not support the Web Audio API.  Please switch to a modern browser.');\n  }\n  const audioContext = new AudioContext();\n  const masterGain = audioContext.createGain();\n  const masterAnalyser = audioContext.createAnalyser();\n\n  masterGain.gain.value = 0;\n\n  masterGain.connect(masterAnalyser);\n  masterAnalyser.connect(audioContext.destination);\n  return [audioContext, masterGain, masterAnalyser];\n}\n\n\n/**\n * @function\n * @name setMasterVolume\n * @param {AudioGainNode} masterGain - the node representing the master gain level\n * @param {BaseAudioContext} audioContext - global audio context object\n * @param {Number} action.payload - the gain value to set master gain to, between 0 and 1\n * @returns {void} Nothing\n */\nexport const setMasterVolume = (masterGain, audioContext, { payload }) => {\n  masterGain.gain.linearRampToValueAtTime(payload, audioContext.currentTime + 0.1);\n};\n\n\n/**\n * @function\n * @name setAudioNodeParameter\n * @param {[AudioNode]} audioNodes - an array of AudioNodes whose parameters we can set\n * @param {Object} action.payload - an object specifying the AudioNode index, parameter name, and target value\n * @returns {void} Nothing\n */\nexport const setAudioNodeParameter = (audioNodes, { payload }) => {\n  const { audioNodeIndex, parameter, value } = payload;\n  audioNodes[audioNodeIndex][parameter].value = value;\n};\n\nexport const setAllAudioParameters= (audioContext, masterGain, audioNodes, { payload }) => {\n  const { mixer, audioNodes: newAudioNodes } = payload;\n  masterGain.gain.linearRampToValueAtTime(mixer.masterVolume, audioContext.currentTime + 4);\n  audioNodes.forEach((audioNode, i) => {\n    if (newAudioNodes[i].frequency) {\n      audioNode.frequency.linearRampToValueAtTime(newAudioNodes[i].frequency, audioContext.currentTime + 4);\n    }\n    if (newAudioNodes[i].detune) {\n      audioNode.detune.linearRampToValueAtTime(newAudioNodes[i].detune, audioContext.currentTime + 4);\n    }\n    if (newAudioNodes[i].gain) {\n      audioNode.gain.linearRampToValueAtTime(newAudioNodes[i].gain, audioContext.currentTime + 4);\n    }\n    if (newAudioNodes[i].Q) {\n      audioNode.Q.linearRampToValueAtTime(newAudioNodes[i].Q, audioContext.currentTime + 4);\n    }\n  });\n};\n\n/**\n * @function\n * @name createOscillator\n */\nexport const createOscillator = (\n  audioContext,\n  destinationNode,\n  {\n    type = 'sine',\n    frequency = 200,\n    detune = 0,\n    gain = 0.5,\n    pan = 0,\n  } = {},\n) => {\n  if (!audioContext || !audioContext.createOscillator) {\n    throw new Error('Please provide an AudioContext.');\n  }\n  const oscillator = audioContext.createOscillator();\n  const gainNode = audioContext.createGain();\n  const analyser = audioContext.createAnalyser();\n  const stereoPanner = audioContext.createStereoPanner();\n\n  oscillator.type = type;\n  oscillator.frequency.value = frequency;\n  oscillator.detune.value = detune;\n  gainNode.gain.value = gain;\n  stereoPanner.pan.value = pan;\n\n  oscillator.connect(gainNode);\n  gainNode.connect(analyser);\n  analyser.connect(stereoPanner);\n\n  oscillator.start();\n  stereoPanner.connect(destinationNode);\n\n  return [oscillator, gainNode, analyser, stereoPanner];\n};\n\n\n/**\n * @function\n * @name createPinkNoiseNode\n * @param {BaseAudioContext} audioContext - the global web  audio context\n * @returns {AudioNode} the audio node representing the pink noise oscillator\n * @TODO audioContext.createScriptProcessor() is a bad pattern\n * opt for AudioWorklets once we can figure out how to get them working\n */\nconst createPinkNoiseNode = (audioContext) => {\n  const bufferSize = 4096;\n  var b0, b1, b2, b3, b4, b5, b6;\n      b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n  const node = audioContext.createScriptProcessor(bufferSize, 1, 1);\n  node.onaudioprocess = function(e) {\n      const output = e.outputBuffer.getChannelData(0);\n      for (let i = 0; i < bufferSize; i++) {\n          const white = Math.random() * 2 - 1;\n          b0 = 0.99886 * b0 + white * 0.0555179;\n          b1 = 0.99332 * b1 + white * 0.0750759;\n          b2 = 0.96900 * b2 + white * 0.1538520;\n          b3 = 0.86650 * b3 + white * 0.3104856;\n          b4 = 0.55000 * b4 + white * 0.5329522;\n          b5 = -0.7616 * b5 - white * 0.0168980;\n          output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n          output[i] *= 0.11; // (roughly) compensate for gain\n          b6 = white * 0.115926;\n      }\n  }\n  return node;\n};\n\n\n/**\n * @function\n * @name createPinkNoiseOscillator\n */\nexport const createPinkNoiseOscillator = (\n  audioContext,\n  destinationNode,\n  {\n    filterType = 'lowpass',\n    filterFrequency = 5000,\n    filterQ = 0,\n    gain = 0.01,\n  } = {},\n) => {\n  const pinkNoise = createPinkNoiseNode(audioContext);\n  const biquadFilter = audioContext.createBiquadFilter();\n  const gainNode =  audioContext.createGain();\n  biquadFilter.type = filterType;\n  biquadFilter.frequency.value = filterFrequency;\n  biquadFilter.Q.value = filterQ;\n  gainNode.gain.value = gain;\n  pinkNoise.connect(biquadFilter);\n  biquadFilter.connect(gainNode);\n  gainNode.connect(destinationNode);\n  return [biquadFilter, gainNode];\n};","/**\n * @file Presently the only file that contains any sagas.\n * @author Patrick Estabrook\n */\n\n\nimport { put, takeEvery, all } from 'redux-saga/effects'\nimport {\n  createAudioContext,\n  createOscillator,\n  createPinkNoiseOscillator,\n  setMasterVolume,\n  setAudioNodeParameter,\n  setAllAudioParameters,\n} from 'audio/helpers';\n\n\n/**\n * @generator\n * @name initializeAudioSaga\n */\nfunction* initializeAudioSaga() {\n  const [audioContext, masterGain, masterAnalyser] = createAudioContext();\n\n  const [osc1, osc1Gain, osc1Analyser] = createOscillator(audioContext, masterGain,\n    { frequency: 79, detune: -19, pan: -1 }\n  );\n  const [osc2, osc2Gain, osc2Analyser] = createOscillator(audioContext, masterGain,\n    { frequency: 78, pan: 1 }\n  );\n  const [pinkNoiseGain, pinkNoiseFilter] = createPinkNoiseOscillator(audioContext, masterGain);\n\n  const audioNodes = [osc1, osc2, pinkNoiseFilter, pinkNoiseGain, osc1Gain, osc2Gain];\n\n  // listen for parameter changes\n  yield takeEvery('@action.activePreset.mixer.setMasterVolume', setMasterVolume, masterGain, audioContext);\n  yield takeEvery('@action.activePreset.setAudioNodeParameter', setAudioNodeParameter, audioNodes);\n  yield takeEvery('@action.changeActivePreset', setAllAudioParameters, audioContext, masterGain, audioNodes);\n  // @TODO fix this in a smart and good and sane way please\n  yield put({type: '@action.createVisualizer', payload: masterAnalyser});\n  yield put({type: '@action.createOsc1Visualizer', payload: osc1Analyser});\n  yield put({type: '@action.createOsc2Visualizer', payload: osc2Analyser});\n}\n\n\n/**\n * @generator\n * @name watchForUserPermissionForAudio\n */\nfunction* watchForUserPermissionForAudio() {\n  yield takeEvery('@action.grantUserPermissionForAudio', initializeAudioSaga);\n}\n\n\n/**\n * @generator\n * @name rootSaga\n */\nexport default function* rootSaga() {\n  yield all([\n    watchForUserPermissionForAudio(),\n  ])\n}","import { action, createStore } from 'easy-peasy';\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from 'sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nconst model = {\n  theme: 'light',\n  toggleTheme: action((state) => { state.theme = (state.theme === 'light' ? 'dark' : 'light'); }),\n\n  hasUserPermissionForAudio: false,\n  grantUserPermissionForAudio: action(state => { state.hasUserPermissionForAudio = true; }),\n\n  errors: [\"Must get permission to use AudioContext.\"],\n  createError: action((state, payload) => { state.errors = [...state.errors, payload]; }),\n\n  activePreset: {\n    mixer: {\n      masterVolume: 0, // between 0 and 1\n      setMasterVolume: action((state, payload) => { state.masterVolume = payload; })\n    },\n    audioNodes: [\n      { frequency: 72, detune: -19 },\n      { frequency: 71.6, detune: 0 },\n      { gain: 0.01 },\n      { frequency: 5000, Q: 0 },\n      { gain: 0.5 },\n      { gain: 0.5 }\n    ],\n    setAudioNodeParameter: action((state, payload) => {\n      const { audioNodeIndex, parameter, value } = payload;\n      state.audioNodes[audioNodeIndex][parameter] = value;\n    }),\n  },\n\n  changeActivePreset: action((state, payload) => {\n    const { mixer, audioNodes } = payload;\n    state.activePreset.mixer = mixer;\n    state.activePreset.audioNodes = audioNodes;\n  }),\n\n  presets: [\n    {\n      mixer: { masterVolume: 0 },\n      audioNodes: [\n        { frequency: 72, detune: -19 },\n        { frequency: 71.6, detune: 0 },\n        { gain: 0.01 },\n        { frequency: 5000, Q: 0 },\n        { gain: 0.5 },\n        { gain: 0.5 }\n      ],\n    },\n    {\n      mixer: { masterVolume: 0.5 },\n      audioNodes: [\n        { frequency: 163.733, detune: -19 },\n        { frequency: 158.133, detune: 39.667 },\n        { gain: 0.0103 },\n        { frequency: 3367, Q: 0 },\n        { gain: 0.5 },\n        { gain: 0.5 }\n      ],\n    },\n    {\n      mixer: { masterVolume: 0 },\n      audioNodes: [\n        { frequency: 72, detune: -19 },\n        { frequency: 71.6, detune: 0 },\n        { gain: 0.01 },\n        { frequency: 5000, Q: 0 },\n        { gain: 0.5 },\n        { gain: 0.5 }\n      ],\n    },\n    {\n      mixer: { masterVolume: 0 },\n      audioNodes: [\n        { frequency: 72, detune: -19 },\n        { frequency: 71.6, detune: 0 },\n        { gain: 0.01 },\n        { frequency: 5000, Q: 0 },\n        { gain: 0.5 },\n        { gain: 0.5 }\n      ],\n    },\n    {\n      mixer: { masterVolume: 0 },\n      audioNodes: [\n        { frequency: 72, detune: -19 },\n        { frequency: 71.6, detune: 0 },\n        { gain: 0.01 },\n        { frequency: 5000, Q: 0 },\n        { gain: 0.5 },\n        { gain: 0.5 }\n      ],\n    },\n    {\n      mixer: { masterVolume: 0 },\n      audioNodes: [\n        { frequency: 72, detune: -19 },\n        { frequency: 71.6, detune: 0 },\n        { gain: 0.01 },\n        { frequency: 5000, Q: 0 },\n        { gain: 0.5 },\n        { gain: 0.5 }\n      ],\n    }\n  ],\n\n\n\n  // THIS IS ALL UGLY AND TERRIBLE\n  // FIND A BETTER WAY HOMIE\n  visualizer: null, // this is probably a bad idea.  Going to see if it works.\n  createVisualizer: action((state, payload) => {\n    state.visualizer = payload;\n  }),\n  oscillator1Visualizer: null, // this is probably a bad idea.  Going to see if it works.\n  createOsc1Visualizer: action((state, payload) => {\n    state.oscillator1Visualizer = payload;\n  }),\n  oscillator2Visualizer: null, // this is probably a bad idea.  Going to see if it works.\n  createOsc2Visualizer: action((state, payload) => {\n    state.oscillator2Visualizer = payload;\n  }),\n};\n\n// Create the store\nconst store = createStore(model, { middleware });\n// Start the saga middleware\nsagaMiddleware.run(rootSaga);\n// Export the store.\nexport default store;","import styled from '@emotion/styled';\n\nconst Button = styled.button`\n  font-size: 2rem;\n  font-family: \"Roboto Mono\";\n  font-weight: 400;\n  font-style: normal;\n`;\n\nexport default Button;","import styled from '@emotion/styled';\n\nexport const ControlsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 20px;\n  padding: 20px;\n`;\n\nexport const ControlGroup = styled.div`\n  margin-right: 100px;\n`;\n\nexport const ControlLabel = styled.label`\n  display: block;\n  text-align: center;\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  flex-direction: row;\n`;","import React, { useEffect, useRef } from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { Button, AudioNodeParameterRange, VerticalRange } from 'Components';\nimport { ControlGroup, ControlLabel, Controls, ControlsWrapper } from './Styled';\n\n\n/*\n * This stuff is all for canvas pixel ratio.\n */\nconst getPixelRatio = context => {\n  var backingStore =\n    context.backingStorePixelRatio ||\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1;\n\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\n\n/**\n * @function\n * @name useVisualizer\n * @param {*} canvasRef\n * @param {*} visualizer\n */\nconst useVisualizer = (canvasRef, visualizer) => (\n  () => {\n    if (!canvasRef || !canvasRef.current) return;\n    let canvas = canvasRef.current;\n    let context = canvas.getContext('2d');\n    let ratio = getPixelRatio(context);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    /*\n    * Main canvas rendering function\n    */\n    let requestId;\n    const render = () => {\n      var bufferLength = visualizer.frequencyBinCount;\n      var dataArray = new Uint8Array(bufferLength);\n      visualizer.getByteTimeDomainData(dataArray);\n      context.fillStyle = \"rgb(200, 200, 200)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n      context.lineWidth = 10;\n      context.strokeStyle = \"rgb(0, 0, 0)\";\n      context.beginPath();\n      var sliceWidth = canvas.width * 1.0 / bufferLength;\n      var x = 0;\n      for (var i = 0; i < bufferLength; i++) {\n        var v = dataArray[i] / 128.0;\n        var y = v * canvas.height / 2;\n        if (i === 0) { context.moveTo(x, y); }\n        else { context.lineTo(x, y); }\n        x += sliceWidth;\n      }\n      context.lineTo(canvas.width, canvas.height / 2);\n      context.stroke();\n      requestId = requestAnimationFrame(render);\n    }\n    render();\n    return () => { cancelAnimationFrame(requestId); }\n  }\n);\n\n\n/**\n * @function\n * @name Layout\n */\nfunction Layout() {\n\n  // const visualizer = useStoreState(state => state.visualizer);\n  // const oscillator1Visualizer = useStoreState(state => state.oscillator1Visualizer);\n  // const oscillator2Visualizer = useStoreState(state => state.oscillator2Visualizer);\n  let canvasRef = useRef();\n  let osc1Ref = useRef();\n  let osc2Ref = useRef();\n  // useEffect(useVisualizer(canvasRef, visualizer));\n  // useEffect(useVisualizer(osc1Ref, oscillator1Visualizer));\n  // useEffect(useVisualizer(osc2Ref, oscillator2Visualizer));\n\n  const mixer = {\n    ...useStoreState(state => state.activePreset.mixer),\n    ...useStoreActions(actions => actions.activePreset.mixer),\n  };\n\n  const changeActivePreset = useStoreActions(actions => actions.changeActivePreset);\n  const presets = useStoreState(state => state.presets);\n\n  const hasUserPermissionForAudio = useStoreState(state => state.hasUserPermissionForAudio);\n  const grantUserPermissionForAudio = useStoreActions(\n    actions => actions.grantUserPermissionForAudio\n  );\n\n  if (!hasUserPermissionForAudio) {\n    return (\n      <Button\n        onClick={() => grantUserPermissionForAudio()}\n      >\n        Grant permission for audio\n      </Button>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        <h3>presets</h3>\n        <Button onClick={() => changeActivePreset(presets[0])}>1</Button>\n        <Button onClick={() => changeActivePreset(presets[1])}>2</Button>\n        <Button onClick={() => changeActivePreset(presets[2])}>3</Button>\n        <Button onClick={() => changeActivePreset(presets[3])}>4</Button>\n        <Button onClick={() => changeActivePreset(presets[4])}>5</Button>\n        <Button onClick={() => changeActivePreset(presets[5])}>6</Button>\n\n      </div>\n      <ControlsWrapper>\n        <ControlGroup>\n          <ControlLabel>left oscillator</ControlLabel>\n          <Controls>\n            <AudioNodeParameterRange\n              audioNodeIndex={0}\n              parameter=\"frequency\"\n              step={0.0001}\n              min={20}\n              max={300}\n            />\n            <AudioNodeParameterRange\n              audioNodeIndex={0}\n              parameter=\"detune\"\n              step={0.0001}\n              min={-50}\n              max={50}\n            />\n            <AudioNodeParameterRange\n              audioNodeIndex={4}\n              parameter=\"gain\"\n              step={0.0001}\n              min={0}\n              max={0.5}\n            />\n          </Controls>\n        </ControlGroup>\n\n        <ControlGroup>\n          <ControlLabel>right oscillator</ControlLabel>\n          <Controls>\n            <AudioNodeParameterRange\n              audioNodeIndex={1}\n              parameter=\"frequency\"\n              min={20}\n              max={300}\n            />\n            <AudioNodeParameterRange\n              audioNodeIndex={1}\n              parameter=\"detune\"\n              min={-50}\n              max={50}\n            />\n            <AudioNodeParameterRange\n              audioNodeIndex={5}\n              parameter=\"gain\"\n              min={0}\n              max={0.5}\n            />\n          </Controls>\n        </ControlGroup>\n\n        <ControlGroup>\n          <ControlLabel>pink noise</ControlLabel>\n          <Controls>\n            <AudioNodeParameterRange\n              audioNodeIndex={3}\n              parameter=\"frequency\"\n              step={0.0001}\n              min={1}\n              max={10000}\n            />\n            <AudioNodeParameterRange\n              audioNodeIndex={3}\n              parameter=\"Q\"\n              step={0.0001}\n              min={0}\n              max={15}\n            />\n            <AudioNodeParameterRange\n              audioNodeIndex={2}\n              parameter=\"gain\"\n              step={0.0001}\n              min={0}\n              max={0.25}\n            />\n          </Controls>\n        </ControlGroup>\n\n        <VerticalRange\n          name=\"master volume\"\n          step={0.0001}\n          min={0}\n          max={1}\n          values={[mixer.masterVolume]}\n          onChange={([value]) => mixer.setMasterVolume(value)}\n        />\n      </ControlsWrapper>\n      <canvas\n        ref={osc1Ref}\n        style={{ width: '500px', height: '500px' }}\n      />\n      <canvas\n        ref={osc2Ref}\n        style={{ width: '500px', height: '500px' }}\n      />\n      <canvas\n        ref={canvasRef}\n        id=\"visualizer\"\n        style={{ width: '500px', height: '500px' }}\n      />\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Direction, Range, getTrackBackground } from 'react-range';\n\nfunction VerticalRange({ parameter, step, min, max, values, onChange }) {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '20px'}}>\n      <Range\n        step={step}\n        min={min}\n        max={max}\n        direction={Direction.Up}\n        values={values}\n        onChange={onChange}\n        renderTrack={({ props, children }) => (\n          <div\n            onMouseDown={props.onMouseDown}\n            onTouchStart={props.onTouchStart}\n            style={{\n              ...props.style,\n              flexGrow: 1,\n              width: '36px',\n              display: 'flex',\n              justifyContent: 'center',\n              height: '300px'\n            }}\n          >\n            <div\n              ref={props.ref}\n              style={{\n                width: '5px',\n                height: '100%',\n                borderRadius: '4px',\n                background: getTrackBackground({\n                  colors: ['#548BF4', '#ccc'],\n                  values,\n                  min,\n                  max,\n                  direction: Direction.Up\n                }),\n                alignSelf: 'center'\n              }}\n            >\n              {children}\n            </div>\n          </div>\n        )}\n        renderThumb={({ props, isDragged }) => (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              height: '42px',\n              width: '42px',\n              borderRadius: '4px',\n              backgroundColor: '#FFF',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              boxShadow: '0px 2px 6px #AAA'\n            }}\n          >\n            <div\n              style={{\n                width: '16px',\n                height: '5px',\n                backgroundColor: isDragged ? '#548BF4' : '#CCC'\n              }}\n            />\n          </div>\n        )}\n      />\n      <label>{parameter}<br />{values[0]}</label>\n    </div>\n  );\n}\n\nexport default VerticalRange;","import React from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { VerticalRange } from 'Components';\n\nfunction AudioNodeParameterRange({\n  audioNodeIndex,\n  parameter,\n  step = 0.0001,\n  min,\n  max\n}) {\n  const props = { parameter, step, min, max };\n  const audioNodes = useStoreState(state => state.activePreset.audioNodes);\n  const setAudioNodeParameter = useStoreActions(actions => actions.activePreset.setAudioNodeParameter)\n  return (\n    <VerticalRange\n      {...props}\n      values={[audioNodes[audioNodeIndex][parameter]]}\n      onChange={([value]) => setAudioNodeParameter({\n        audioNodeIndex,\n        parameter,\n        value\n      })}\n    />\n  );\n}\n\nexport default AudioNodeParameterRange;\n","import React from 'react';\nimport { StoreProvider } from 'easy-peasy';\nimport store from './store';\nimport { Layout } from 'Components';\n\nfunction App() {\n  return (\n    <StoreProvider store={store}>\n      <Layout />\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}